console.log('------------#3')

function sum(x) {

	return function sum1(y) {
		return x + y
    }
    
}
const sum1 = sum(1);
console.log(sum(1)(2));



// console.log('------------#4a')

// число "10" выводится по той причине, что вызов функции происходит по окончании цикла, в момент вывода функция является замыканием,
// т.е. запоминает свое лексическое окружение (переменную i), а i в этот момент = 10.(потому что цикл завершен и конечный вариант i -- это 10).
// функция навешена на цикл, максиальное значение i = 10, поэтому функция вызывается 10 раз, но для одной и той же переменной, 
// поэтому лексическое окружение неизменно --- равно 10.

// чтобы вывести в консоль результат каждой итерации(1,2,3...10), нам нужно использовать самовызывающуюся функцию и в ней создать переменную, присвоив ей значение i.

// for (var i = 0; i < 10; i++) {
//     (function (){
//         let index = i;
//         setTimeout(function() {
//             console.log(index+1);
//         }, 0);
//     }
//     )();
// }
// таким образом при каждой итерации функция будет вызывать саму себя, будет создаваться новое лексическое окружение для "новой" переменной.

// console.log('------------#4b')
// for (var i = 0; i < 10; i++) {
//     let index = i;
//     setTimeout(function() {
//         console.log(index+1);
//     }, 0);
// }
// console.log();

console.log('------------#4c')
for (var i = 0; i < 10; i++) {
    setTimeout((function(lol) {
        
        return function () {
            console.log(lol+1);
        }
        
        
    })(i), 0);
}
